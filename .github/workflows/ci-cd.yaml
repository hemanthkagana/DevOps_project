name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        cd backend
        python -m pytest tests/ -v

    - name: Build and push backend Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        cd backend
        docker build -t your-dockerhub-username/todo-backend:latest .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push your-dockerhub-username/todo-backend:latest

  build-deploy-frontend:
    needs: build-test-backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Run tests
      run: |
        cd frontend
        npm test

    - name: Build and push frontend Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        cd frontend
        docker build -t your-dockerhub-username/todo-frontend:latest .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push your-dockerhub-username/todo-frontend:latest

    - name: Deploy to Kubernetes
      if: github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

        kubectl apply -f kubernetes/namespace.yaml
        kubectl apply -f kubernetes/postgres-deployment.yaml
        kubectl apply -f kubernetes/postgres-service.yaml
        kubectl apply -f kubernetes/backend-deployment.yaml
        kubectl apply -f kubernetes/backend-service.yaml
        kubectl apply -f kubernetes/frontend-deployment.yaml
        kubectl apply -f kubernetes/frontend-service.yaml
